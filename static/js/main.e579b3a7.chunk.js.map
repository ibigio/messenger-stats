{"version":3,"sources":["App.module.css","util.js","components/my_pie.js","components/my_line.js","components/my_bar.js","components/word_list.js","App.js","reportWebVitals.js","index.js","components/word_list.module.css","components/my_pie.module.css"],"names":["module","exports","numberWithCommas","x","toString","replace","getSeasonOf","date","m","console","log","monthToSeason","getMonth","MyPie","data","title","units","values","labels","className","styles","pie_container","colorful","canvas","ctx","getContext","gradient1","createLinearGradient","addColorStop","gradient2","datasets","backgroundColor","options","responsive","maintainAspectRatio","legend","display","plugins","deferred","yOffset","MyLine","gradient","MyBar","Entry","word","count","index","isEqual","equal","grid","decodeURIComponent","escape","line","WordList","wordFreqs","firstName","eqs","slice","map","wf","str","ch","st","re","i","length","charCodeAt","push","concat","reverse","unpack","colorful2","border","container","names","chat_data","participants","p","name","firstNames","n","split","totalBytesSent","messages","filter","content","sender_name","reduce","total","totalMessagesSent","totalWordsSent","flatMap","wordsPerMessage","wordsPer","Math","round","messagesOverTime","dates","timestamp_ms","sort","Date","seasons","counts","curSeason","curCount","forEach","d","toLowerCase","Object","keys","a","b","wordEqs","maxNum","ilan","shelley","getMessagesPerHour","hour","getHours","hours","totalMessagesSentData","v","totalBytesSentData","totalWordsSentData","wordsPerMessageData","toFixed","messagesOverTimeData","messagesPerHourData","h","App","app_container","center","header","comment","section","grid1","wordListGrid","wordListItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e579b3a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app_container\":\"App_app_container__3q_K2\",\"header\":\"App_header__3ZZ1n\",\"center\":\"App_center__3oPdq\",\"section\":\"App_section__1OL6S\",\"comment\":\"App_comment__-_b-A\",\"grid1\":\"App_grid1__25qca\",\"wordListGrid\":\"App_wordListGrid__3RcpF\",\"wordListItem\":\"App_wordListItem__43Zrp\"};","\nconst numberWithCommas = x => x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\nconst monthToSeason = m => {\n    switch (m+1) {\n        case 12:\n        case 1:\n        case 2:\n            return 'Winter';\n        case 3:\n        case 4:\n        case 5:\n            return 'Spring';\n        case 6:\n        case 7:\n        case 8:\n            return 'Summer';\n        case 9:\n        case 10:\n        case 11:\n            return 'Fall';\n        default:\n            console.log(m);\n    }\n};\n\nconst getSeasonOf = date => {\n    return monthToSeason(date.getMonth());// + \" \" + date.getFullYear() % 1000;\n};\n\nconst formatHour = hour => {\n    let h = hour % 12;\n    if (h == 0) h = 12;\n\n    const suffix = hour > 11 ? 'pm' : 'am';\n\n    return h + '' + suffix;\n}\n\nfunction unpack ( str ) {\n    var ch, st, re = [];\n    for (var i = 0; i < str.length; i++ ) {\n      ch = str.charCodeAt(i);  // get char \n      st = [];                 // set up \"stack\"\n      do {\n        st.push( ch & 0xFF );  // push byte to stack\n        ch = ch >> 8;          // shift value down by 1 byte\n      }  \n      while ( ch );\n      // add stack contents to result\n      // done because chars have \"wrong\" endianness\n      re = re.concat( st.reverse() );\n    }\n    // return an array of bytes\n    return re;\n  }\n\n// function unpack(str) {\n//     var bytes = [];\n//     for(var i = 0; i < str.length; i++) {\n//         var char = str.charCodeAt(i);\n//         bytes.push(char >>> 8);\n//         bytes.push(char & 0xFF);\n//     }\n//     return bytes;\n// }\n\n\nexport { numberWithCommas, getSeasonOf, formatHour, unpack};","import { Pie } from 'react-chartjs-2';\nimport styles from './my_pie.module.css';\nimport { numberWithCommas } from '../util';\nimport 'chartjs-plugin-deferred';\n\nexport default function MyPie({ data }) {\n\n    const { title, units, values, labels } = data;\n\n    const start1 = 0;\n    const end1 = 250;\n\n    const start2 = 200;\n    const end2 = 275;\n\n    const dataFunc = canvas => {\n        const ctx = canvas.getContext(\"2d\");\n        const gradient1 = ctx.createLinearGradient(start1, start1, end1, end1);\n        gradient1.addColorStop(0, '#0099ff');\n        gradient1.addColorStop(1, '#a033ff');\n        const gradient2 = ctx.createLinearGradient(start2, start2, end2, end2);\n        gradient2.addColorStop(0, '#ff5280');\n        gradient2.addColorStop(1, '#ff7061');\n        return {\n            labels: labels,\n            datasets: [{\n                data: values,\n                backgroundColor: [\n                    gradient2,\n                    gradient1,\n                ],\n            }],\n        }\n    };\n\n    const options = {\n        responsive: true,\n        maintainAspectRatio: true,\n        legend: {\n            display: false\n        },\n        plugins: {\n            deferred: { yOffset: '80%' }\n        }\n    }\n\n    return (\n        <div className={styles.pie_container}>\n            <p className={styles.title}>\n                <div className={styles.colorful}>{numberWithCommas(units)}</div> <br /> {title}\n            </p>\n            <div>\n                <Pie data={dataFunc} options={options} />\n            </div>\n        </div>\n    );\n}","import { Line } from 'react-chartjs-2';\nimport styles from './my_pie.module.css';\nimport { numberWithCommas } from '../util';\nimport 'chartjs-plugin-deferred';\n\nexport default function MyLine({ data }) {\n\n    const { title, units, values, labels } = data;\n\n    const start1 = 0;\n    const end1 = 700;\n\n    const dataFunc = canvas => {\n        const ctx = canvas.getContext(\"2d\");\n        const gradient = ctx.createLinearGradient(start1, start1, end1, end1);\n        gradient.addColorStop(0, '#0099ff');\n        gradient.addColorStop(0.5, '#a033ff');\n        gradient.addColorStop(0.8, '#ff5280');\n        gradient.addColorStop(0.9, '#ff7061');\n        return {\n            labels: labels,\n            datasets: [{\n                data: values,\n                backgroundColor: gradient,\n            }],\n        }\n    };\n\n    const options = {\n        legend: {\n            display: false\n        },\n        plugins: {\n            deferred: { yOffset: '80%' }\n        }\n    }\n\n    return (\n        <div>\n            <p className={styles.title}>\n                <div className={styles.colorful}>{numberWithCommas(units)}</div> <br /> {title}\n            </p>\n            <div>\n                <Line data={dataFunc} options={options} />\n            </div>\n        </div>\n    );\n}","import { Bar } from 'react-chartjs-2';\nimport styles from './my_pie.module.css';\nimport { numberWithCommas } from '../util';\n\nexport default function MyBar({ data }) {\n\n    const { title, units, values, labels } = data;\n\n    const start1 = 0;\n    const end1 = 700;\n\n    const dataFunc = canvas => {\n        const ctx = canvas.getContext(\"2d\");\n        const gradient = ctx.createLinearGradient(start1, start1, end1, end1);\n        gradient.addColorStop(0, '#0099ff');\n        gradient.addColorStop(0.5, '#a033ff');\n        gradient.addColorStop(0.8, '#ff5280');\n        gradient.addColorStop(0.9, '#ff7061');\n        return {\n            labels: labels,\n            datasets: [{\n                data: values,\n                backgroundColor: gradient,\n            }],\n        }\n    };\n\n    const options = {\n        legend: {\n            display: false\n        },\n        plugins: {\n            deferred: { yOffset: '80%' }\n        }\n    }\n\n    return (\n        <div>\n            <p className={styles.title}>\n                <div className={styles.colorful}>{numberWithCommas(units)}</div> <br /> {title}\n            </p>\n            <div>\n                <Bar data={dataFunc} options={options} />\n            </div>\n        </div>\n    );\n}","import styles from './word_list.module.css';\nimport { numberWithCommas, unpack } from '../util';\n\nconst Entry = ({ word, count, index, isEqual }) => (\n    <div>\n        <div className={isEqual ? styles.equal : ''}>\n            <div className={styles.grid}>\n                <span className={styles.colorful}>{index}.</span>\n                <span className={styles.word}> {decodeURIComponent(escape(word))} </span>\n                <span className={styles.count} >{numberWithCommas(count)}</span>\n            </div>\n        </div>\n        <div className={styles.line}></div>\n    </div>\n);\n\nconst WordList = ({ wordFreqs, firstName, eqs }) => (\n    <div>\n        {console.log(wordFreqs.slice(0, 50).map(wf => unpack(wf.word)))}\n        <div className={styles.title}>\n            <div className={styles.colorful2}>\n                {firstName}'s\n                </div><br />\n            Favorite Words\n            </div>\n        <div className={styles.border} >\n            <div className={styles.container}>\n                {wordFreqs.slice(0, 500).map((wf, index) => (\n                    <Entry word={wf.word} count={wf.count} index={index + 1} isEqual={eqs[wf.word]} />\n                ))}\n            </div>\n        </div>\n    </div>\n);\n\nexport default WordList;","import chat_data from './data/messages.json';\nimport MyPie from './components/my_pie';\nimport MyLine from './components/my_line';\nimport MyBar from './components/my_bar';\nimport WordList from './components/word_list';\nimport styles from './App.module.css';\nimport { getSeasonOf, formatHour } from './util';\n\nconst names = chat_data.participants.map(p => p.name);\nconst firstNames = names.map(n => n.split(' ')[0]);\n\nconst totalBytesSent = names.map(name => (\n  chat_data.messages\n    .filter(m => m.content && m.sender_name === name)\n    .reduce((total, m) => total + m.content.length, 0)\n));\n\nconst totalMessagesSent = names.map(name => (\n  chat_data.messages\n    .filter(m => m.sender_name === name)\n    .length\n));\n\nconst totalWordsSent = names.map(name => (\n  chat_data.messages\n    .filter(m => m.sender_name === name)\n    .filter(m => m.content)\n    .flatMap(m => m.content.split(' '))\n    .length\n));\n\nconst wordsPerMessage = (() => {\n  const wordsPer = [];\n\n  for (let i = 0; i < names.length; i++) {\n    wordsPer.push(\n      Math.round(100 * totalWordsSent[i] / totalMessagesSent[i]) / 100\n      );\n  }\n\n  return wordsPer;\n})();\n\nconst messagesOverTime = (() => {\n  const dates = chat_data.messages\n    .map(m => m.timestamp_ms)\n    .sort()\n    .map(m => new Date(m));\n\n  const seasons = [];\n  const counts = [];\n\n  let curSeason = getSeasonOf(dates[0]);\n  let curCount = 0;\n\n  dates.forEach(d => {\n    if (getSeasonOf(d) === curSeason) {\n      curCount++;\n    } else {\n      seasons.push(curSeason);\n      counts.push(curCount);\n      curSeason = getSeasonOf(d);\n      curCount = 0;\n    }\n  });\n  // necessary to avoid off by one\n  seasons.push(curSeason);\n  counts.push(curCount);\n\n  return {\n    seasons: seasons,\n    counts: counts,\n  };\n})();\n\nconst wordFreqs = name => {\n  const counts = {};\n\n  chat_data.messages\n    .filter(m => m.sender_name === name)\n    .filter(m => m.content)\n    .flatMap(m => m.content.split(' '))\n    .map(word => word.toLowerCase())\n    .forEach(word => {\n      counts[word] = counts[word] ? counts[word] + 1 : 1;\n    });\n\n  return Object\n    .keys(counts)\n    .map(word => ({ word: word, count: counts[word] }))\n    .sort((a, b) => a.count - b.count)\n    .reverse();\n};\n\nconst wordEqs = (maxNum => {\n  const eqs = {};\n\n  let ilan = wordFreqs('Ilan Bigio');\n  let shelley = wordFreqs('Shelley Jain');\n\n  for (let i = 0; i < maxNum; i++) {\n    if (ilan[i].word === shelley[i].word) {\n      eqs[ilan[i].word] = true;\n    }\n  }\n  return eqs;\n})(500);\n\nconst getMessagesPerHour = (() => {\n\n  const counts = {};\n\n  chat_data.messages\n    .map(m => m.timestamp_ms)\n    .map(m => new Date(m))\n    .forEach(d => {\n      const hour = (d.getHours() + 3) % 24;\n      counts[hour] = counts[hour] ? counts[hour] + 1 : 1;\n    });\n\n    return {\n      hours: Object.keys(counts),\n      counts: Object.keys(counts).map(hour => counts[hour])\n    };\n})();\n\nconst totalMessagesSentData = {\n  units: totalMessagesSent.reduce((total, v) => total + v),\n  title: \"Messages Sent\",\n  values: totalMessagesSent,\n  labels: firstNames\n};\n\nconst totalBytesSentData = {\n  units: totalBytesSent.map(x => Math.round(x / 1000)).reduce((total, v) => total + v),\n  title: \"Kilobytes Sent\",\n  values: totalBytesSent.map(x => Math.round(x / 1000)),\n  labels: firstNames\n};\n\nconst totalWordsSentData = {\n  units: totalWordsSent.reduce((total, v) => total + v),\n  title: \"Words Sent\",\n  values: totalWordsSent,\n  labels: firstNames\n};\n\nconst wordsPerMessageData = {\n  units: (wordsPerMessage.reduce((total, v) => total + v) / wordsPerMessage.length).toFixed(2),\n  title: \"Words per Message\",\n  values: wordsPerMessage,\n  labels: firstNames\n};\n\nconst messagesOverTimeData = {\n  units: \"\",\n  title: \"Messages per Season\",\n  values: messagesOverTime.counts,\n  labels: messagesOverTime.seasons,\n};\n\nconst messagesPerHourData = {\n  units: \"\",\n  title: \"Total Messages at Each Time of Day\",\n  values: getMessagesPerHour.counts,\n  labels: getMessagesPerHour.hours.map(formatHour)\n};\n\nconst App = () => {\n\n  return <>\n    <div className={styles.app_container}>\n      <div className={styles.center}>\n        <h1 className={styles.header} >Shelley and Ilan's Messenger Shenanigans</h1>\n      </div>\n      <div className={styles.comment}>\n        Thought it'd be cool to do some scripting with our messenger chat to see what fun things I could find :)\n      </div>\n\n      <div className={styles.comment}>\n        Turns out we've texted a lot...\n      </div>\n      <div className={styles.section}>\n        <div className={styles.grid1}>\n          <MyPie data={totalMessagesSentData} />\n          <MyPie data={totalBytesSentData} />\n          <MyPie data={totalWordsSentData} />\n          <MyPie data={wordsPerMessageData} />\n        </div>\n      </div>\n      <div className={styles.comment}>\n        ...but I guess me a little more than you!\n      </div>\n\n      <div className={styles.comment}>\n        Also I think we slowly figured out how to use our words more than texts...\n      </div>\n      <div className={styles.section}>\n        <MyLine data={messagesOverTimeData} />\n      </div>\n      <div className={styles.comment}>\n        ...or we just stopped sending our solution code over messenger.\n      </div>\n\n      <div className={styles.comment}>\n        We have favorite words! In this section I like using Find to see how our words ranked. (It auto scrolls when you do.) \n      </div>\n      <div className={styles.section}>\n        <div className={styles.wordListGrid}>\n          <div className={styles.wordListItem}>\n            <WordList wordFreqs={wordFreqs('Shelley Jain')} firstName={'Shelley'} eqs={wordEqs} />\n          </div>\n          <div className={styles.wordListItem}>\n            <WordList wordFreqs={wordFreqs('Ilan Bigio')} firstName={'Ilan'} eqs={wordEqs} />\n          </div>\n        </div>\n      </div>\n      <div className={styles.comment}>\n        I stopped it at 500 because it was breaking the site. Your 500th is wya?, btw. And we like never used btw, btw.\n      </div>\n\n      <div className={styles.comment}>\n        And we were like defintely not having it at 5am.\n      </div>\n      <div className={styles.section}>\n        <MyBar data={messagesPerHourData} />\n      </div>\n\n      <div className={styles.comment}>\n        I was going to add more sections but I started this pretty last minute. Hope you enjoyed!\n      </div>\n\n    </div>\n  </>\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"word_list_container__1V7Vi\",\"border\":\"word_list_border__gLOgA\",\"colorful\":\"word_list_colorful__a3FjX\",\"colorful2\":\"word_list_colorful2__W2bgf\",\"word\":\"word_list_word__1u-yP\",\"count\":\"word_list_count__235Tv\",\"grid\":\"word_list_grid__3aihA\",\"line\":\"word_list_line__aLzh5\",\"title\":\"word_list_title__1XZ8f\",\"equal\":\"word_list_equal__38PFU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"my_pie_title__2pwxi\",\"colorful\":\"my_pie_colorful__1BVSS\",\"pie_container\":\"my_pie_pie_container__2aSng\"};"],"sourceRoot":""}