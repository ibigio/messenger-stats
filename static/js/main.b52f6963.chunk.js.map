{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","chat_data","chartData","style","height","data","TotalContentChart","totals","participants","map","p","id","name","value","senderName","messages","reduce","total","m","content","sender_name","length","TotalMessagesChart","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ksoxCAKe,SAASA,IAAO,IAAD,EACMC,mBAASC,GADf,mBACrBC,EADqB,UAG5B,OACE,qCACE,+CACA,sBAAKC,MAAO,CAAEC,OAAQ,SAAtB,UACE,cAAC,EAAD,CAAmBC,KAAMH,IACzB,cAAC,EAAD,CAAoBG,KAAMH,UAMlC,IAAMI,EAAoB,SAAC,GAAc,IAAZD,EAAW,EAAXA,KAWvBE,EAASF,EAAKG,aAAaC,KAAI,SAAAC,GAAC,MAAK,CACvCC,GAAID,EAAEE,KACNC,OAXkCC,EAWAJ,EAAEE,KAVpCP,EAAKU,SAASC,QAAO,SAACC,EAAOC,GAC3B,OAAIA,EAAEC,SAAWD,EAAEE,aAAeN,EACzBG,EAAQC,EAAEC,QAAQE,OAEpBJ,IACN,KAN8B,IAACH,KAcpC,OAAO,cAAC,IAAD,CACLT,KAAME,KAIJe,EAAqB,SAAC,GAAc,IAAZjB,EAAW,EAAXA,KAQxBE,EAASF,EAAKG,aAAaC,KAAI,SAAAC,GAAC,MAAK,CACvCC,GAAID,EAAEE,KACNC,OAR8BC,EAQAJ,EAAEE,KAPhCP,EAAKU,SACJQ,QAAO,SAAAL,GAAC,OAAGA,EAAEC,SAAWD,EAAEE,aAAeN,KACzCO,SAH4B,IAACP,KAWhC,OAAO,cAAC,IAAD,CACLT,KAAME,KC1CKiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b52f6963.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ResponsivePie } from '@nivo/pie';\nimport chat_data from './data/message_1.json';\nimport './App.css';\n\nexport default function App() {\n  const [chartData, setChartData] = useState(chat_data);\n\n  return (\n    <>\n      <h1>Hello, World!</h1>\n      <div style={{ height: \"800px\" }}>\n        <TotalContentChart data={chartData} />\n        <TotalMessagesChart data={chartData} />\n      </div>\n    </>\n  );\n}\n\nconst TotalContentChart = ({ data }) => {\n\n  const countTotalContentForSender = (senderName) => (\n    data.messages.reduce((total, m) => {\n      if (m.content && m.sender_name == senderName) {\n        return total + m.content.length;\n      }\n      return total;\n    }, 0)\n  );\n\n  let totals = data.participants.map(p => ({\n    id: p.name,\n    value: countTotalContentForSender(p.name),\n  }))\n\n  return <ResponsivePie\n    data={totals}\n  />\n}\n\nconst TotalMessagesChart = ({ data }) => {\n\n  const countMessagesForSender = (senderName) => (\n    data.messages\n    .filter(m =>m.content && m.sender_name == senderName)\n    .length\n  );\n\n  let totals = data.participants.map(p => ({\n    id: p.name,\n    value: countMessagesForSender(p.name),\n  }))\n\n  return <ResponsivePie\n    data={totals}\n  />\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}