{"version":3,"sources":["util.js","components/my_pie.js","components/my_line.js","App.js","reportWebVitals.js","index.js","components/my_pie.module.css","App.module.css"],"names":["numberWithCommas","x","toString","replace","getSeasonOf","date","m","console","log","monthToSeason","getMonth","MyPie","data","title","units","values","labels","className","styles","colorful","canvas","ctx","getContext","gradient1","createLinearGradient","addColorStop","gradient2","datasets","backgroundColor","options","responsive","maintainAspectRatio","legend","display","MyLine","gradient","plugins","deferred","yOffset","names","chat_data","participants","map","p","name","firstNames","n","split","totalBytesSent","messages","filter","content","sender_name","reduce","total","length","totalMessagesSent","messagesOverTime","dates","timestamp_ms","sort","Date","seasons","counts","curSeason","curCount","forEach","d","push","totalMessagesSentData","v","totalBytesSentData","Math","round","messagesOverTimeData","App","app_container","center","header","grid1","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.009e8d68.chunk.js","sourcesContent":["\nconst numberWithCommas = x => x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\nconst monthToSeason = m => {\n    switch (m+1) {\n        case 12:\n        case 1:\n        case 2:\n            return 'Winter';\n        case 3:\n        case 4:\n        case 5:\n            return 'Spring';\n        case 6:\n        case 7:\n        case 8:\n            return 'Summer';\n        case 9:\n        case 10:\n        case 11:\n            return 'Fall';\n        default:\n            console.log(m);\n    }\n};\n\nconst getSeasonOf = date => {\n    return monthToSeason(date.getMonth());// + \" \" + date.getFullYear() % 1000;\n};\n\nexport { numberWithCommas, monthToSeason, getSeasonOf };","import { Pie } from 'react-chartjs-2';\nimport styles from './my_pie.module.css';\nimport { numberWithCommas } from '../util';\n\nexport default function MyPie({ data }) {\n\n    const { title, units, values, labels } = data;\n\n    const start1 = 0;\n    const end1 = 250;\n\n    const start2 = 200;\n    const end2 = 275;\n\n    const dataFunc = canvas => {\n        const ctx = canvas.getContext(\"2d\");\n        const gradient1 = ctx.createLinearGradient(start1, start1, end1, end1);\n        gradient1.addColorStop(0, '#0099ff');\n        gradient1.addColorStop(1, '#a033ff');\n        const gradient2 = ctx.createLinearGradient(start2, start2, end2, end2);\n        gradient2.addColorStop(0, '#ff5280');\n        gradient2.addColorStop(1, '#ff7061');\n        return {\n            labels: labels,\n            datasets: [{\n                data: values,\n                backgroundColor: [\n                    gradient2,\n                    gradient1,\n                ],\n            }],\n        }\n    };\n\n    const options = {\n        responsive: true,\n        maintainAspectRatio: true,\n        legend: {\n            display: false\n        }\n    }\n\n    return (\n        <div>\n            <p className={styles.title}>\n                <div className={styles.colorful}>{numberWithCommas(units)}</div> <br /> {title}\n            </p>\n            <div>\n                <Pie data={dataFunc} options={options} />\n            </div>\n        </div>\n    );\n}","import { Line } from 'react-chartjs-2';\nimport styles from './my_pie.module.css';\nimport { numberWithCommas } from '../util';\nimport 'chartjs-plugin-deferred';\n\nexport default function MyLine({ data }) {\n\n    const { title, units, values, labels } = data;\n\n    const start1 = 0;\n    const end1 = 700;\n\n    const dataFunc = canvas => {\n        const ctx = canvas.getContext(\"2d\");\n        const gradient = ctx.createLinearGradient(start1, start1, end1, end1);\n        gradient.addColorStop(0, '#0099ff');\n        gradient.addColorStop(0.5, '#a033ff');\n        gradient.addColorStop(0.8, '#ff5280');\n        gradient.addColorStop(0.9, '#ff7061');\n        return {\n            labels: labels,\n            datasets: [{\n                data: values,\n                backgroundColor: gradient,\n            }],\n        }\n    };\n\n    const options = {\n        legend: {\n            display: false\n        },\n        plugins: {\n            deferred: { yOffset: '80%' }\n        }\n    }\n\n    return (\n        <div>\n            <p className={styles.title}>\n                <div className={styles.colorful}>{numberWithCommas(units)}</div> <br /> {title}\n            </p>\n            <div>\n                <Line data={dataFunc} options={options} />\n            </div>\n        </div>\n    );\n}","import chat_data from './data/messages.json';\nimport MyPie from './components/my_pie';\nimport MyLine from './components/my_line';\nimport styles from './App.module.css';\nimport { monthToSeason, getSeasonOf } from './util';\n\nconst names = chat_data.participants.map(p => p.name);\nconst firstNames = names.map(n => n.split(' ')[0]);\n\nconst totalBytesSent = names.map(name => (\n  chat_data.messages\n    .filter(m => m.content && m.sender_name === name)\n    .reduce((total, m) => total + m.content.length, 0)\n));\n\nconst totalMessagesSent = names.map(name => (\n  chat_data.messages\n    .filter(m => m.sender_name === name)\n    .length\n));\n\nconst messagesOverTime = (() => {\n  const dates = chat_data.messages\n    .map(m => m.timestamp_ms)\n    .sort()\n    .map(m => new Date(m));\n\n  const seasons = [];\n  const counts = [];\n\n  let curSeason = getSeasonOf(dates[0]);\n  let curCount = 0;\n\n  dates.forEach(d => {\n    if (getSeasonOf(d) == curSeason) {\n      curCount++;\n    } else {\n      seasons.push(curSeason);\n      counts.push(curCount);\n      curSeason = getSeasonOf(d);\n      curCount = 0;\n    }\n  });\n  // necessary to avoid off by one\n  seasons.push(curSeason);\n  counts.push(curCount);\n\n  return {\n    seasons: seasons,\n    counts: counts,\n  };\n})();\n\nconst colorful = s => (\n  <span className={styles.colorful}>{s}</span>\n);\n\nconst totalMessagesSentData = {\n  units: totalMessagesSent.reduce((total, v) => total + v),\n  title: \"Messages Sent\",\n  values: totalMessagesSent,\n  labels: firstNames\n};\n\nconst totalBytesSentData = {\n  units: totalBytesSent.map(x => Math.round(x / 1000)).reduce((total, v) => total + v),\n  title: \"Kilobytes Sent\",\n  values: totalBytesSent.map(x => Math.round(x / 1000)),\n  labels: firstNames\n};\n\nconst messagesOverTimeData = {\n  units: messagesOverTime.counts.length,\n  title: \"Title\",\n  values: messagesOverTime.counts,\n  labels: messagesOverTime.seasons,\n};\n\n\nconst App = () => {\n\n  return <>\n    <div className={styles.app_container}>\n      <div className={styles.center}>\n        <h1 className={styles.header} >Shelley and Ilan's Messenger Shenanigans</h1>\n      </div>\n      <div className={styles.grid1}>\n        <MyPie data={totalMessagesSentData} />\n        <MyPie data={totalBytesSentData} />\n      </div>\n      <MyLine data={messagesOverTimeData} />\n\n    </div>\n  </>\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"my_pie_title__2pwxi\",\"colorful\":\"my_pie_colorful__1BVSS\",\"chart_container\":\"my_pie_chart_container__2VQrd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app_container\":\"App_app_container__3q_K2\",\"header\":\"App_header__3ZZ1n\",\"center\":\"App_center__3oPdq\",\"grid1\":\"App_grid1__25qca\"};"],"sourceRoot":""}